services:
  # InfluxDB untuk time-series database
  influxdb:
    image: influxdb:2.7
    container_name: social-media-influxdb
    ports:
      - "8086:8086" # InfluxDB HTTP API
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=social-media
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token
    volumes:
      - ./data/influxdb:/var/lib/influxdb2
    networks:
      - app-network
    restart: unless-stopped

  # Grafana untuk visualisasi metrics
  grafana:
    image: grafana/grafana:latest
    container_name: social-media-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - ./data/grafana:/var/lib/grafana # Custom path
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - influxdb

  # Go Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: social-media-app
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      # Override specific values for Docker environment
      - SERVER_HOST=0.0.0.0
      - DB_HOST=host.docker.internal
      - INFLUXDB_HOST=http://influxdb:8086
    networks:
      - app-network
    depends_on:
      - influxdb
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  app-network:
    driver: bridge
