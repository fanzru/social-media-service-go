openapi: 3.0.3
info:
  title: Comment API
  description: API for managing comments on social media posts
  version: 1.0.0
  contact:
    name: Social Media Service Team
    email: hi@fanzru.dev

servers:
  - url: http://localhost:8080
    description: Development server

paths:
  /api/posts/{postId}/comments:
    post:
      security:
        - bearerAuth: []
      summary: Create a new comment
      description: Create a new comment on a specific post
      tags:
        - Comments
      parameters:
        - name: postId
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCommentRequest"
      responses:
        "201":
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "400":
          description: Bad request - validation errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "401":
          description: Unauthorized - invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "404":
          description: Post not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
    get:
      summary: Get post comments
      description: Get all comments for a specific post with pagination
      tags:
        - Comments
      parameters:
        - name: postId
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
            format: int64
            example: 1
        - name: cursor
          in: query
          description: Cursor for pagination
          required: false
          schema:
            type: string
            example: "2024-01-01T00:00:00Z"
        - name: limit
          in: query
          description: Number of comments to return (max 100)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
            example: 20
      responses:
        "200":
          description: Comments retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "404":
          description: Post not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"

  /api/comments/{id}:
    get:
      summary: Get comment by ID
      description: Get a specific comment by its ID
      tags:
        - Comments
      parameters:
        - name: id
          in: path
          required: true
          description: Comment ID
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: Comment retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "404":
          description: Comment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
    put:
      security:
        - bearerAuth: []
      summary: Update comment
      description: Update a comment (only the creator can update)
      tags:
        - Comments
      parameters:
        - name: id
          in: path
          required: true
          description: Comment ID
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCommentRequest"
      responses:
        "200":
          description: Comment updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "400":
          description: Bad request - validation errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "401":
          description: Unauthorized - invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "403":
          description: Forbidden - not the comment creator
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "404":
          description: Comment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
    delete:
      security:
        - bearerAuth: []
      summary: Delete comment
      description: Delete a comment (only the creator can delete)
      tags:
        - Comments
      parameters:
        - name: id
          in: path
          required: true
          description: Comment ID
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: Comment deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "401":
          description: Unauthorized - invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "403":
          description: Forbidden - not the comment creator
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "404":
          description: Comment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"

  /api/comments/user/{userId}:
    get:
      summary: Get user comments
      description: Get all comments by a specific user
      tags:
        - Comments
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID
          schema:
            type: integer
            format: int64
            example: 1
        - name: cursor
          in: query
          description: Cursor for pagination
          required: false
          schema:
            type: string
            example: "2024-01-01T00:00:00Z"
        - name: limit
          in: query
          description: Number of comments to return (max 100)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
            example: 20
      responses:
        "200":
          description: User comments retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandardResponse"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "JWT token obtained from login endpoint"

  schemas:
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        content:
          type: string
          example: "Great post! Love the sunset ðŸŒ…"
        post_id:
          type: integer
          format: int64
          example: 1
        creator_id:
          type: integer
          format: int64
          example: 2
        creator_name:
          type: string
          example: "Jane Smith"
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        deleted_at:
          type: string
          format: date-time
          nullable: true
          example: null

    CreateCommentRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          minLength: 1
          maxLength: 500
          example: "Great post! Love the sunset ðŸŒ…"

    UpdateCommentRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          minLength: 1
          maxLength: 500
          example: "Updated comment content"

    CommentListResponse:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: "#/components/schemas/Comment"
        cursor:
          type: string
          nullable: true
          example: "2024-01-01T00:00:00Z"
          description: "Cursor for next page"
        has_more:
          type: boolean
          example: true
          description: "Whether there are more comments"

    StandardResponse:
      type: object
      properties:
        code:
          type: string
          enum:
            - SUCCESS
            - FAILED
            - BAD_REQUEST
            - UNAUTHORIZED
            - FORBIDDEN
            - NOT_FOUND
            - CONFLICT
            - INTERNAL_SERVER_ERROR
          example: "SUCCESS"
        message:
          type: string
          example: "Operation completed successfully"
        errors:
          type: array
          items:
            type: string
          example: []
        serverTime:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        requestId:
          type: string
          example: "req_123456789"
        data:
          type: object
          description: "Response data (varies by endpoint)"
